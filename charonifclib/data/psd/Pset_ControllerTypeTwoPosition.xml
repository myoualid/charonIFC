<?xml version="1.0"?>
<PropertySetDef xsi:noNamespaceSchemaLocation="http://buildingSMART-tech.org/xml/psd PSD_IFC4.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>Pset_ControllerTypeTwoPosition</Name>
  <Definition>Properties for signal handling for an analog controller taking disparate valued multiple inputs and creating a single valued binary output. HISTORY: In IFC 2x4, extended properties to replace Pset_BinaryInput and Pset_BinaryOutput.</Definition>
  <IfcVersion version="2x4" />
  <ApplicableClasses>
    <ClassName>IfcController/TWOPOSITION</ClassName>
  </ApplicableClasses>
  <ApplicableTypeValue>IfcController/TWOPOSITION</ApplicableTypeValue>
  <PropertyDefs>
    <PropertyDef ifdguid="6e2f5e33d7944d14b64d6ec6cf5946df">
      <Name>ControlType</Name>
      <Definition>The type of signal modification effected and applicable ports:

LOWERLIMITSWITCH: Single analog input is read and if less than Value.LowerBound then True is written to the output value.
UPPERLIMITSWITCH: Single analog input is read and if more than Value.UpperBound then True is written to the output value.
LOWERBANDSWITCH: Single analog input is read and if less than Value.LowerBound+BandWidth then True is written to the output value.
UPPERBANDSWITCH: Single analog input is read and if more than Value.UpperBound-BandWidth then True is written to the output value.
NOT: Single binary input is read and the opposite value is written to the output value.
AND: Two binary inputs are read and if both are True then True is written to the output value.
OR: Two binary inputs are read and if either is True then True is written to the output value.
XOR: Two binary inputs are read and if one is true then True is written to the output value.
CALENDAR: No inputs; the current time is compared with an IfcWorkCalendar to which the IfcController is assigned and True is written if active.
INPUT: Controller element is a dedicated input.
OUTPUT: Controller element is a dedicated output.
VARIABLE: Controller element is an in-memory variable.</Definition>
      <PropertyType>
        <TypePropertyEnumeratedValue>
          <EnumList name="PEnum_ControllerTwoPositionType">
            <EnumItem>NOT</EnumItem>
            <EnumItem>AND</EnumItem>
            <EnumItem>OR</EnumItem>
            <EnumItem>XOR</EnumItem>
            <EnumItem>LOWERLIMITSWITCH</EnumItem>
            <EnumItem>UPPERLIMITSWITCH</EnumItem>
            <EnumItem>LOWERBANDSWITCH</EnumItem>
            <EnumItem>UPPERBANDSWITCH</EnumItem>
            <EnumItem>AVERAGE</EnumItem>
            <EnumItem>CALENDAR</EnumItem>
            <EnumItem>INPUT</EnumItem>
            <EnumItem>OUTPUT</EnumItem>
            <EnumItem>VARIABLE</EnumItem>
            <EnumItem>OTHER</EnumItem>
            <EnumItem>NOTKNOWN</EnumItem>
            <EnumItem>UNSET</EnumItem>
          </EnumList>
        </TypePropertyEnumeratedValue>
      </PropertyType>
      <NameAliases />
      <DefinitionAliases />
    </PropertyDef>
    <PropertyDef ifdguid="e95936e39d5a4beeaa6ac4243232d138">
      <Name>Labels</Name>
      <Definition>Table mapping values to labels, where such labels indicate the meanings of True and False, such as 'Open' and 'Closed'</Definition>
      <PropertyType>
        <TypePropertyTableValue />
      </PropertyType>
      <NameAliases />
      <DefinitionAliases />
    </PropertyDef>
    <PropertyDef ifdguid="5299214a9e424a2eb21829aeadf99716">
      <Name>Polarity</Name>
      <Definition>True indicates normal polarity; False indicates reverse polarity.</Definition>
      <PropertyType>
        <TypePropertySingleValue>
          <DataType type="IfcBoolean" />
        </TypePropertySingleValue>
      </PropertyType>
      <NameAliases />
      <DefinitionAliases />
    </PropertyDef>
    <PropertyDef ifdguid="01bbdec8e8dd427f9e71ab353f7344ce">
      <Name>Value</Name>
      <Definition>The default value such as normally-closed or normally-open.</Definition>
      <PropertyType>
        <TypePropertySingleValue>
          <DataType type="IfcBoolean" />
        </TypePropertySingleValue>
      </PropertyType>
      <NameAliases />
      <DefinitionAliases />
    </PropertyDef>
  </PropertyDefs>
  <PsetDefinitionAliases />
</PropertySetDef>